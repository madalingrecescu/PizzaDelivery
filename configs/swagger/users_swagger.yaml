swagger: '2.0'
info:
  title: User Microservice API
  version: 1.0.0
  description: API for user registration and management.
paths:
  /user/{user_id}:
    get:
      summary: Get User Data by user_id
      description: Retrieve user data by user_id.
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          description: The user's ID to retrieve.
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: User data retrieved successfully
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Bad request
        '404':
          description: User not found
        '500':
          description: Internal server error
  /signup:
    post:
      summary: User Registration
      description: Register a new user account.
      tags:
        - Users
      parameters:
        - name: body
          in: body
          description: User registration data
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
                description: The username of the new user.
              email:
                type: string
                format: email
                description: The email address of the new user.
              password:
                type: string
                description: The password for the new user.
            required:
              - username
              - email
              - password
      responses:
        '201':
          description: User registered successfully
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Bad request. Invalid input data
        '409':
          description: Conflict. User already exists
        '500':
          description: Internal server error
  /login:
    post:
      summary: User Login
      description: Authenticate and log in a user.
      tags:
        - Users
      parameters:
        - name: body
          in: body
          description: User login data
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                description: The email address of the user.
              password:
                type: string
                description: The user's password.
            required:
              - email
              - password
      responses:
        '200':
          description: User logged in successfully
          schema:
            type: object
            properties:
              token:
                type: string
                description: Authentication token for the user's session
        '401':
          description: Unauthorized. Invalid credentials
        '500':
          description: Internal server error
definitions:
  User:
    type: object
    properties:
      username:
        type: string
        description: The username of the user.
      email:
        type: string
        format: email
        description: The email address of the user.
      phone_number:
        type: string
        description: The phone number of the user.

